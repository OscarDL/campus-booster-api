{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Campus Booster API",
        "description": "The Node.js backend API used to serve data to the Campus Booster client.",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },

    "schemes": ["https"],
    "basePath": "",
    "host": "",
    "consumes": ["application/json"],
    "produces": ["application/json"],

    "tags": [
        {
            "name": "Auth"
        },
        {
            "name": "Home"
        },
        {
            "name": "Users"
        },
        {
            "name": "Absences"
        },
        {
            "name": "Balances"
        },
        {
            "name": "Campus"
        },
        {
            "name": "ClassroomHasCourses"
        },
        {
            "name": "Classrooms"
        },
        {
            "name": "Contracts"
        },
        {
            "name": "Courses"
        },
        {
            "name": "Feedbacks"
        },
        {
            "name": "Grades"
        },
        {
            "name": "Plannings"
        },
        {
            "name": "Projects"
        },
        {
            "name": "Teachers"
        },
        {
            "name": "Tools"
        },
        {
            "name": "UserHasClassrooms"
        }
    ],

    "components": {
        "securityScemes": {
            "cookieAuth": {
                "in": "cookie",
                "type": "apiKey",
                "name": "accessToken"
            }
        }
    },

    "security": {
        "cookieAuth": []
    },

    "paths": {
        "/auth/login": {
            "post": {
                "tags": ["Auth"],
                "summary": "Sign in as a Campus Booster user.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "azureId",
                        "description": "Azure ID (ObjectID) of the user trying to connect.",
                        "schema": {
                            "type": "object",
                            "required": ["azureId"],
                            "properties": {
                                "azureId": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "get": {
                "tags": ["Auth"],
                "summary": "Sign out a user from Campus Booster.",
                "responses": {
                    "200": {}
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "tags": ["Auth"],
                "summary": "Refresh the access token of a signed in user.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "refreshToken",
                        "description": "Refresh token of the user.",
                        "schema": {
                            "type": "object",
                            "required": ["refreshToken"],
                            "properties": {
                                "refreshToken": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "type": "object",
                        "properties": {
                            "refreshToken": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/home/summary": {
            "get": {
                "tags": ["Home"],
                "summary": "Returns the summary of Campus Booster.",
                "responses": {
                    "200": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "campus": {
                                    "type": "number"
                                },
                                "courses": {
                                    "type": "number"
                                },
                                "students": {
                                    "type": "number"
                                },
                                "contracts": {
                                    "type": "number"
                                },
                                "annualCredits": {
                                    "type": "number"
                                },
                                "latestGrades": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Grade"
                                    }
                                },
                                "upcomingCourses": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Planning"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": ["Users"],
                "summary": "Returns the list of all users.",
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Users"],
                "summary": "Create a new user in the database.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "user",
                        "description": "User fields to assign to the new user.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/users/{user_id}": {
            "get": {
                "tags": ["Users"],
                "summary": "Returns a specific user from the given ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "user_id",
                        "required": "true",
                        "description": "User ID to identify which user to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "patch": {
                "tags": ["Users"],
                "summary": "Update an existing user in the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "user_id",
                        "required": "true",
                        "description": "User ID to identify which user to edit."
                    },
                    {
                        "in": "body",
                        "name": "user",
                        "description": "New fields to assign to an existing user. Only keep the fields you want to change.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "203": {
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Users"],
                "summary": "Delete an existing user from the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "user_id",
                        "required": "true",
                        "description": "User ID to identify which user to delete."
                    }
                ],
                "responses": {
                    "204": {}
                }
            }
        },
        "/users/azure/{user_id}": {
            "delete": {
                "tags": ["Users"],
                "summary": "Delete an existing user from Azure.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "user_id",
                        "required": "true",
                        "description": "User ID to identify which user to delete."
                    }
                ],
                "responses": {
                    "204": {}
                }
            }
        },
        "/users/activate/{user_id}": {
            "patch": {
                "tags": ["Users"],
                "summary": "Activate a user account for Campus Booster.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "user_id",
                        "required": "true",
                        "description": "User ID to identify which user to activate."
                    }
                ],
                "responses": {
                    "203": {
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/users/resetpassword/{user_id}": {
            "patch": {
                "tags": ["Users"],
                "summary": "Reset the password of a user account.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "user_id",
                        "required": "true",
                        "description": "User ID to identify which user to reset the password for."
                    }
                ],
                "responses": {
                    "203": {
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/users/teacher/{user_id}": {
            "get": {
                "tags": ["Users"],
                "summary": "Retrieve all users for a specific teacher (in a classroom).",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "user_id",
                        "required": "true",
                        "description": "User ID to identify which teacher to retrieve the users for."
                    }
                ],
                "responses": {
                    "203": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                }
            }
        },
        "/users/classrooms/add/{user_id}": {
            "patch": {
                "tags": ["Users"],
                "summary": "Add a specific user to a specific classroom.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "user_id",
                        "required": "true",
                        "description": "User ID to identify which user to add to the given classrooms."
                    },
                    {
                        "in": "body",
                        "description": "Classrooms to assign to the given user.",
                        "schema": {
                            "type": "object",
                            "required": ["classrooms"],
                            "properties": {
                                "classrooms": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "203": {
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/users/classrooms/remove/{user_id}": {
            "patch": {
                "tags": ["Users"],
                "summary": "Remove a specific user from a specific classroom.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "user_id",
                        "required": "true",
                        "description": "User ID to identify which user to remove from the given classrooms."
                    },
                    {
                        "in": "body",
                        "description": "Classrooms to remove from the given user.",
                        "schema": {
                            "type": "object",
                            "required": ["classrooms"],
                            "properties": {
                                "classrooms": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "203": {
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/absences": {
            "get": {
                "tags": ["Absences"],
                "summary": "Returns the list of all absences.",
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Absence"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Absences"],
                "summary": "Create a new absence in the database.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "absence",
                        "description": "Absence fields to assign to the new absence.",
                        "schema": {
                            "$ref": "#/definitions/Absence"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/Absence"
                        }
                    }
                }
            }
        },
        "/absences/{absence_id}": {
            "get": {
                "tags": ["Absences"],
                "summary": "Returns a specific absence from the given ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "absence_id",
                        "required": "true",
                        "description": "Absence ID to identify which absence to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Absence"
                        }
                    }
                }
            },
            "patch": {
                "tags": ["Absences"],
                "summary": "Update an existing absence in the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "absence_id",
                        "required": "true",
                        "description": "Absence ID to identify which absence to edit."
                    },
                    {
                        "in": "body",
                        "name": "absence",
                        "description": "New fields to assign to an existing absence. Only keep the fields you want to change.",
                        "schema": {
                            "$ref": "#/definitions/Absence"
                        }
                    }
                ],
                "responses": {
                    "203": {
                        "schema": {
                            "$ref": "#/definitions/Absence"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Absences"],
                "summary": "Delete an existing absence from the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "absence_id",
                        "required": "true",
                        "description": "Absence ID to identify which absence to delete."
                    }
                ],
                "responses": {
                    "204": {}
                }
            }
        },
        "/absences/user/{user_id}": {
            "get": {
                "tags": ["Absences"],
                "summary": "Returns absences from the user ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "user_id",
                        "required": "true",
                        "description": "User ID to identify which absence to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Absence"
                            }
                        }
                    }
                }
            }
        },
        "/balances": {
            "get": {
                "tags": ["Balances"],
                "summary": "Returns the list of all balances.",
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Balance"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Balances"],
                "summary": "Create a new balance in the database.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "balance",
                        "description": "Balance fields to assign to the new balance.",
                        "schema": {
                            "$ref": "#/definitions/Balance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/Balance"
                        }
                    }
                }
            }
        },
        "/balances/{balance_id}": {
            "get": {
                "tags": ["Balances"],
                "summary": "Returns a specific balance from the given ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "balance_id",
                        "required": "true",
                        "description": "Balance ID to identify which balance to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Balance"
                        }
                    }
                }
            },
            "patch": {
                "tags": ["Balances"],
                "summary": "Update an existing balance in the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "balance_id",
                        "required": "true",
                        "description": "Balance ID to identify which balance to edit."
                    },
                    {
                        "in": "body",
                        "name": "balance",
                        "description": "New fields to assign to an existing balance. Only keep the fields you want to change.",
                        "schema": {
                            "$ref": "#/definitions/Balance"
                        }
                    }
                ],
                "responses": {
                    "203": {
                        "schema": {
                            "$ref": "#/definitions/Balance"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Balances"],
                "summary": "Delete an existing balance from the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "balance_id",
                        "required": "true",
                        "description": "Balance ID to identify which balance to delete."
                    }
                ],
                "responses": {
                    "204": {}
                }
            }
        },
        "/balances/user/{user_id}": {
            "get": {
                "tags": ["Balances"],
                "summary": "Returns balances from the user ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "user_id",
                        "required": "true",
                        "description": "User ID to identify which balance to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Balance"
                            }
                        }
                    }
                }
            }
        },
        "/campus": {
            "get": {
                "tags": ["Campus"],
                "summary": "Returns the list of all Campus.",
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Campus"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Campus"],
                "summary": "Create a new campus in the database.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "campus",
                        "description": "Campus fields to assign to the new campus.",
                        "schema": {
                            "$ref": "#/definitions/Campus"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/Campus"
                        }
                    }
                }
            }
        },
        "/campus/{campus_id}": {
            "get": {
                "tags": ["Campus"],
                "summary": "Returns a specific campus from the given ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "campus_id",
                        "required": "true",
                        "description": "Campus ID to identify which campus to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Campus"
                        }
                    }
                }
            },
            "patch": {
                "tags": ["Campus"],
                "summary": "Update an existing campus in the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "campus_id",
                        "required": "true",
                        "description": "Campus ID to identify which campus to edit."
                    },
                    {
                        "in": "body",
                        "name": "campus",
                        "description": "New fields to assign to an existing campus. Only keep the fields you want to change.",
                        "schema": {
                            "$ref": "#/definitions/Campus"
                        }
                    }
                ],
                "responses": {
                    "203": {
                        "schema": {
                            "$ref": "#/definitions/Campus"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Campus"],
                "summary": "Delete an existing campus from the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "campus_id",
                        "required": "true",
                        "description": "Campus ID to identify which campus to delete."
                    }
                ],
                "responses": {
                    "204": {}
                }
            }
        },
        "/classroomhascourses": {
            "get": {
                "tags": ["ClassroomHasCourses"],
                "summary": "Returns the list of all ClassroomHasCourses.",
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ClassroomHasCourse"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["ClassroomHasCourses"],
                "summary": "Create a new classroomHasCourse in the database.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "classroomHasCourse",
                        "description": "ClassroomHasCourses fields to assign to the new classroomHasCourse.",
                        "schema": {
                            "$ref": "#/definitions/ClassroomHasCourse"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/ClassroomHasCourse"
                        }
                    }
                }
            }
        },
        "/classroomhascourses/{classroomhascourses_id}": {
            "get": {
                "tags": ["ClassroomHasCourses"],
                "summary": "Returns a specific classroomHasCourse from the given ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "classroomhascourses_id",
                        "required": "true",
                        "description": "ClassroomHasCourse ID to identify which classroomHasCourse to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ClassroomHasCourse"
                        }
                    }
                }
            },
            "patch": {
                "tags": ["ClassroomHasCourses"],
                "summary": "Update an existing classroomHasCourse in the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "classroomhascourses_id",
                        "required": "true",
                        "description": "ClassroomHasCourse ID to identify which classroomHasCourse to edit."
                    },
                    {
                        "in": "body",
                        "name": "classroomHasCourse",
                        "description": "New fields to assign to an existing classroomHasCourse. Only keep the fields you want to change.",
                        "schema": {
                            "$ref": "#/definitions/ClassroomHasCourse"
                        }
                    }
                ],
                "responses": {
                    "203": {
                        "schema": {
                            "$ref": "#/definitions/ClassroomHasCourse"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["ClassroomHasCourses"],
                "summary": "Delete an existing classroomHasCourse from the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "classroomhascourses_id",
                        "required": "true",
                        "description": "ClassroomHasCourse ID to identify which classroomHasCourse to delete."
                    }
                ],
                "responses": {
                    "204": {}
                }
            }
        },
        "/classrooms": {
            "get": {
                "tags": ["Classrooms"],
                "summary": "Returns the list of all classrooms.",
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Classroom"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Classrooms"],
                "summary": "Create a new classroom in the database.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "classroom",
                        "description": "Classroom fields to assign to the new classroom.",
                        "schema": {
                            "$ref": "#/definitions/Classroom"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/Classroom"
                        }
                    }
                }
            }
        },
        "/classrooms/{classroom_id}": {
            "get": {
                "tags": ["Classrooms"],
                "summary": "Returns a specific classroom from the given ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "classroom_id",
                        "required": "true",
                        "description": "Classroom ID to identify which classroom to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Classroom"
                        }
                    }
                }
            },
            "patch": {
                "tags": ["Classrooms"],
                "summary": "Update an existing classroom in the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "classroom_id",
                        "required": "true",
                        "description": "Classroom ID to identify which classroom to edit."
                    },
                    {
                        "in": "body",
                        "name": "classroom",
                        "description": "New fields to assign to an existing classroom. Only keep the fields you want to change.",
                        "schema": {
                            "$ref": "#/definitions/Classroom"
                        }
                    }
                ],
                "responses": {
                    "203": {
                        "schema": {
                            "$ref": "#/definitions/Classroom"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Classrooms"],
                "summary": "Delete an existing classroom from the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "classroom_id",
                        "required": "true",
                        "description": "Classroom ID to identify which classroom to delete."
                    }
                ],
                "responses": {
                    "204": {}
                }
            }
        },
        "/classrooms/user/{user_id}": {
            "get": {
                "tags": ["Classrooms"],
                "summary": "Returns classrooms from the user ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "user_id",
                        "required": "true",
                        "description": "User ID to identify which classrooms to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Classroom"
                            }
                        }
                    }
                }
            }
        },
        "/classrooms/{classroom_id}/courses/add": {
            "post": {
                "tags": ["Classrooms"],
                "summary": "Returns classroom with added course.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "classroom_id",
                        "required": "true",
                        "description": "Classroom ID to identify which classroom to retrieve."
                    },
                    {
                        "in": "body",
                        "name": "courses",
                        "description": "Array of course ID.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Classroom"
                            }
                        }
                    }
                }
            }
        },
        "/classrooms/{classroom_id}/courses/remove": {
            "post": {
                "tags": ["Classrooms"],
                "summary": "Returns classroom with removed course.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "classroom_id",
                        "required": "true",
                        "description": "Classroom ID to identify which classroom to retrieve."
                    },
                    {
                        "in": "body",
                        "name": "courses",
                        "description": "Array of course ID.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Classroom"
                            }
                        }
                    }
                }
            }
        },
        "/contracts": {
            "get": {
                "tags": ["Contracts"],
                "summary": "Returns the list of all contracts.",
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contract"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Contracts"],
                "summary": "Create a new contract in the database.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "contract",
                        "description": "Contract fields to assign to the new contract.",
                        "schema": {
                            "$ref": "#/definitions/Contract"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/Contract"
                        }
                    }
                }
            }
        },
        "/contracts/{contract_id}": {
            "get": {
                "tags": ["Contracts"],
                "summary": "Returns a specific contract from the given ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "contract_id",
                        "required": "true",
                        "description": "Contract ID to identify which contract to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Contract"
                        }
                    }
                }
            },
            "patch": {
                "tags": ["Contracts"],
                "summary": "Update an existing contract in the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "contract_id",
                        "required": "true",
                        "description": "Contract ID to identify which contract to edit."
                    },
                    {
                        "in": "body",
                        "name": "contract",
                        "description": "New fields to assign to an existing contract. Only keep the fields you want to change.",
                        "schema": {
                            "$ref": "#/definitions/Contract"
                        }
                    }
                ],
                "responses": {
                    "203": {
                        "schema": {
                            "$ref": "#/definitions/Contract"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Contracts"],
                "summary": "Delete an existing contract from the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "contract_id",
                        "required": "true",
                        "description": "Contract ID to identify which contract to delete."
                    }
                ],
                "responses": {
                    "204": {}
                }
            }
        },
        "/contracts/user/{user_id}": {
            "get": {
                "tags": ["Contracts"],
                "summary": "Returns contracts from the user ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "user_id",
                        "required": "true",
                        "description": "User ID to identify which contracts to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contract"
                            }
                        }
                    }
                }
            }
        },
        "/courses": {
            "get": {
                "tags": ["Courses"],
                "summary": "Returns the list of all courses.",
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Course"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Courses"],
                "summary": "Create a new course in the database.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "course",
                        "description": "Course fields to assign to the new course.",
                        "schema": {
                            "$ref": "#/definitions/Course"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/Course"
                        }
                    }
                }
            }
        },
        "/courses/{course_id}": {
            "get": {
                "tags": ["Courses"],
                "summary": "Returns a specific course from the given ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "course_id",
                        "required": "true",
                        "description": "Course ID to identify which course to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Course"
                        }
                    }
                }
            },
            "patch": {
                "tags": ["Courses"],
                "summary": "Update an existing course in the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "course_id",
                        "required": "true",
                        "description": "Course ID to identify which course to edit."
                    },
                    {
                        "in": "body",
                        "name": "course",
                        "description": "New fields to assign to an existing course. Only keep the fields you want to change.",
                        "schema": {
                            "$ref": "#/definitions/Course"
                        }
                    }
                ],
                "responses": {
                    "203": {
                        "schema": {
                            "$ref": "#/definitions/Course"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Courses"],
                "summary": "Delete an existing course from the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "course_id",
                        "required": "true",
                        "description": "Course ID to identify which course to delete."
                    }
                ],
                "responses": {
                    "204": {}
                }
            }
        },
        "/courses/user/{user_id}": {
            "get": {
                "tags": ["Courses"],
                "summary": "Returns courses from the user ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "user_id",
                        "required": "true",
                        "description": "User ID to identify which courses to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Course"
                            }
                        }
                    }
                }
            }
        },
        "/feedbacks": {
            "get": {
                "tags": ["Feedbacks"],
                "summary": "Returns the list of all feedbacks.",
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Feedback"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Feedbacks"],
                "summary": "Create a new feedback in the database.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "feedback",
                        "description": "Feedback fields to assign to the new feedback.",
                        "schema": {
                            "$ref": "#/definitions/Feedback"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/Feedback"
                        }
                    }
                }
            }
        },
        "/feedbacks/{feedback_id}": {
            "get": {
                "tags": ["Feedbacks"],
                "summary": "Returns a specific feedback from the given ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "feedback_id",
                        "required": "true",
                        "description": "Feedback ID to identify which feedback to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Feedback"
                        }
                    }
                }
            },
            "patch": {
                "tags": ["Feedbacks"],
                "summary": "Update an existing feedback in the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "feedback_id",
                        "required": "true",
                        "description": "Feedback ID to identify which feedback to edit."
                    },
                    {
                        "in": "body",
                        "name": "feedback",
                        "description": "New fields to assign to an existing feedback. Only keep the fields you want to change.",
                        "schema": {
                            "$ref": "#/definitions/Feedback"
                        }
                    }
                ],
                "responses": {
                    "203": {
                        "schema": {
                            "$ref": "#/definitions/Feedback"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Feedbacks"],
                "summary": "Delete an existing feedback from the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "feedback_id",
                        "required": "true",
                        "description": "Feedback ID to identify which feedback to delete."
                    }
                ],
                "responses": {
                    "204": {}
                }
            }
        },
        "/grades": {
            "get": {
                "tags": ["Grades"],
                "summary": "Returns the list of all grades.",
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Grade"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Grades"],
                "summary": "Create a new grade in the database.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "grade",
                        "description": "Grade fields to assign to the new grade.",
                        "schema": {
                            "$ref": "#/definitions/Grade"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/Grade"
                        }
                    }
                }
            }
        },
        "/grades/{grade_id}": {
            "get": {
                "tags": ["Grades"],
                "summary": "Returns a specific grade from the given ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "grade_id",
                        "required": "true",
                        "description": "Grade ID to identify which grade to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Grade"
                        }
                    }
                }
            },
            "patch": {
                "tags": ["Grades"],
                "summary": "Update an existing grade in the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "grade_id",
                        "required": "true",
                        "description": "Grade ID to identify which grade to edit."
                    },
                    {
                        "in": "body",
                        "name": "grade",
                        "description": "New fields to assign to an existing grade. Only keep the fields you want to change.",
                        "schema": {
                            "$ref": "#/definitions/Grade"
                        }
                    }
                ],
                "responses": {
                    "203": {
                        "schema": {
                            "$ref": "#/definitions/Grade"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Grades"],
                "summary": "Delete an existing grade from the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "grade_id",
                        "required": "true",
                        "description": "Grade ID to identify which grade to delete."
                    }
                ],
                "responses": {
                    "204": {}
                }
            }
        },
        "/grades/user/{user_id}": {
            "get": {
                "tags": ["Grades"],
                "summary": "Returns grades from the user ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "user_id",
                        "required": "true",
                        "description": "User ID to identify which grades to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Grade"
                            }
                        }
                    }
                }
            }
        },
        "/grades/teacher/{teacher_id}": {
            "get": {
                "tags": ["Grades"],
                "summary": "Returns grades from the teacher ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "teacher_id",
                        "required": "true",
                        "description": "Teacher ID to identify which grades to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Grade"
                            }
                        }
                    }
                }
            }
        },
        "/grades/teacher/user/{user_id}": {
            "get": {
                "tags": ["Grades"],
                "summary": "Returns grades from the teacher by user ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "user_id",
                        "required": "true",
                        "description": "User ID to identify which grades to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Grade"
                            }
                        }
                    }
                }
            }
        },
        "/plannings": {
            "get": {
                "tags": ["Plannings"],
                "summary": "Returns the list of all plannings.",
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Planning"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Plannings"],
                "summary": "Create a new planning in the database.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "planning",
                        "description": "Planning fields to assign to the new planning.",
                        "schema": {
                            "$ref": "#/definitions/Planning"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/Planning"
                        }
                    }
                }
            }
        },
        "/plannings/{planning_id}": {
            "get": {
                "tags": ["Plannings"],
                "summary": "Returns a specific planning from the given ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "planning_id",
                        "required": "true",
                        "description": "Planning ID to identify which planning to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Planning"
                        }
                    }
                }
            },
            "patch": {
                "tags": ["Plannings"],
                "summary": "Update an existing planning in the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "planning_id",
                        "required": "true",
                        "description": "Planning ID to identify which planning to edit."
                    },
                    {
                        "in": "body",
                        "name": "planning",
                        "description": "New fields to assign to an existing planning. Only keep the fields you want to change.",
                        "schema": {
                            "$ref": "#/definitions/Planning"
                        }
                    }
                ],
                "responses": {
                    "203": {
                        "schema": {
                            "$ref": "#/definitions/Planning"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Plannings"],
                "summary": "Delete an existing planning from the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "planning_id",
                        "required": "true",
                        "description": "Planning ID to identify which planning to delete."
                    }
                ],
                "responses": {
                    "204": {}
                }
            }
        },
        "/plannings/user/{user_id}": {
            "get": {
                "tags": ["Plannings"],
                "summary": "Returns planning from the user ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "user_id",
                        "required": "true",
                        "description": "User ID to identify which plannings to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Planning"
                            }
                        }
                    }
                }
            }
        },
        "/plannings/classroom/{classroom_id}": {
            "get": {
                "tags": ["Plannings"],
                "summary": "Returns planning from the classroom ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "classroom_id",
                        "required": "true",
                        "description": "Classroom ID to identify which plannings to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Planning"
                            }
                        }
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "tags": ["Projects"],
                "summary": "Returns the list of all projects.",
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Projects"],
                "summary": "Create a new project in the database.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "project",
                        "description": "Project fields to assign to the new project.",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                }
            }
        },
        "/projects/{project_id}": {
            "get": {
                "tags": ["Projects"],
                "summary": "Returns a specific project from the given ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "project_id",
                        "required": "true",
                        "description": "Project ID to identify which project to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                }
            },
            "patch": {
                "tags": ["Projects"],
                "summary": "Update an existing project in the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "project_id",
                        "required": "true",
                        "description": "Project ID to identify which project to edit."
                    },
                    {
                        "in": "body",
                        "name": "project",
                        "description": "New fields to assign to an existing project. Only keep the fields you want to change.",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "responses": {
                    "203": {
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Projects"],
                "summary": "Delete an existing project from the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "project_id",
                        "required": "true",
                        "description": "Project ID to identify which project to delete."
                    }
                ],
                "responses": {
                    "204": {}
                }
            }
        },
        "/projects/user/{user_id}": {
            "get": {
                "tags": ["Projects"],
                "summary": "Returns projects from the user ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "user_id",
                        "required": "true",
                        "description": "User ID to identify which projects to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    }
                }
            }
        },
        "/projects/classroom/{classroom_id}": {
            "get": {
                "tags": ["Projects"],
                "summary": "Returns projects from the classroom ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "classroom_id",
                        "required": "true",
                        "description": "Classroom ID to identify which projects to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    }
                }
            }
        },
        "/teachers": {
            "get": {
                "tags": ["Teachers"],
                "summary": "Returns the list of all teachers.",
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Teacher"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Teachers"],
                "summary": "Create a new teacher in the database.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "teacher",
                        "description": "Teacher fields to assign to the new teacher.",
                        "schema": {
                            "$ref": "#/definitions/Teacher"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/Teacher"
                        }
                    }
                }
            }
        },
        "/teachers/{teacher_id}": {
            "get": {
                "tags": ["Teachers"],
                "summary": "Returns a specific teacher from the given ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "teacher_id",
                        "required": "true",
                        "description": "Teacher ID to identify which teacher to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Teacher"
                        }
                    }
                }
            },
            "patch": {
                "tags": ["Teachers"],
                "summary": "Update an existing teacher in the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "teacher_id",
                        "required": "true",
                        "description": "Teacher ID to identify which teacher to edit."
                    },
                    {
                        "in": "body",
                        "name": "teacher",
                        "description": "New fields to assign to an existing teacher. Only keep the fields you want to change.",
                        "schema": {
                            "$ref": "#/definitions/Teacher"
                        }
                    }
                ],
                "responses": {
                    "203": {
                        "schema": {
                            "$ref": "#/definitions/Teacher"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Teachers"],
                "summary": "Delete an existing teacher from the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "teacher_id",
                        "required": "true",
                        "description": "Teacher ID to identify which teacher to delete."
                    }
                ],
                "responses": {
                    "204": {}
                }
            }
        },
        "/tools": {
            "get": {
                "tags": ["Tools"],
                "summary": "Returns the list of all tools.",
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Tool"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Tools"],
                "summary": "Create a new tool in the database.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "tool",
                        "description": "Tool fields to assign to the new tool.",
                        "schema": {
                            "$ref": "#/definitions/Tool"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/Tool"
                        }
                    }
                }
            }
        },
        "/tools/tool_id}": {
            "get": {
                "tags": ["Tools"],
                "summary": "Returns a specific tool from the given ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "tool_id",
                        "required": "true",
                        "description": "Tool ID to identify which tool to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Tool"
                        }
                    }
                }
            },
            "patch": {
                "tags": ["Tools"],
                "summary": "Update an existing tool in the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "tool_id",
                        "required": "true",
                        "description": "Tool ID to identify which tool to edit."
                    },
                    {
                        "in": "body",
                        "name": "tool",
                        "description": "New fields to assign to an existing tool. Only keep the fields you want to change.",
                        "schema": {
                            "$ref": "#/definitions/Tool"
                        }
                    }
                ],
                "responses": {
                    "203": {
                        "schema": {
                            "$ref": "#/definitions/Tool"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Tools"],
                "summary": "Delete an existing tool from the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "tool_id",
                        "required": "true",
                        "description": "Tool ID to identify which tool to delete."
                    }
                ],
                "responses": {
                    "204": {}
                }
            }
        },
        "/userhasclassrooms": {
            "get": {
                "tags": ["UserHasClassrooms"],
                "summary": "Returns the list of all userhasclassrooms.",
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserHasClassroom"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["UserHasClassrooms"],
                "summary": "Create a new userhasclassroom in the database.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "userhasclassroom",
                        "description": "UserHasClassroom fields to assign to the new userhasclassroom.",
                        "schema": {
                            "$ref": "#/definitions/UserHasClassroom"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/UserHasClassroom"
                        }
                    }
                }
            }
        },
        "/userhasclassrooms/tool_id}": {
            "get": {
                "tags": ["UserHasClassrooms"],
                "summary": "Returns a specific userhasclassroom from the given ID.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "userhasclassroom_id",
                        "required": "true",
                        "description": "UserHasClassroom ID to identify which userhasclassroom to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/UserHasClassroom"
                        }
                    }
                }
            },
            "patch": {
                "tags": ["UserHasClassrooms"],
                "summary": "Update an existing userhasclassroom in the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "userhasclassroom_id",
                        "required": "true",
                        "description": "UserHasClassroom ID to identify which userhasclassroom to edit."
                    },
                    {
                        "in": "body",
                        "name": "userhasclassroom",
                        "description": "New fields to assign to an existing userhasclassroom. Only keep the fields you want to change.",
                        "schema": {
                            "$ref": "#/definitions/UserHasClassroom"
                        }
                    }
                ],
                "responses": {
                    "203": {
                        "schema": {
                            "$ref": "#/definitions/UserHasClassroom"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["UserHasClassrooms"],
                "summary": "Delete an existing userhasclassroom from the database.",
                "parameters": [
                    {
                        "in": "path",
                        "type": "integer",
                        "name": "userhasclassroom_id",
                        "required": "true",
                        "description": "UserHasClassroom ID to identify which userhasclassroom to delete."
                    }
                ],
                "responses": {
                    "204": {}
                }
            }
        }
    },

    "definitions": {
        "User": {
            "required": [
                "azureId",
                "firstName",
                "lastName",
                "email",
                "personalEmail",
                "birthday",
                "active",
                "banned",
                "role",
                "address",
                "credits"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "azureId": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "personalEmail": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string"
                },
                "avatarKey": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "banned": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string"
                },
                "campusId": {
                    "type": "integer"
                },
                "address": {
                    "type": "string"
                },
                "credits": {
                    "type": "integer"
                },
                "gender": {
                    "type": "string"
                },
                "promotion": {
                    "type": "integer"
                }
            }
        },
        "Absence": {
            "required": ["planingId", "userId"],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "late": {
                    "type": "boolean"
                },
                "period": {
                    "type": "string"
                },
                "planingId": {
                    "type": "number"
                },
                "userId": {
                    "type": "number"
                },
                "fileKeys": {
                    "type": "array"
                },
                "fileBase64": {
                    "type": "array"
                }
            }
        },
        "Balance": {
            "required": [
                "description",
                "dateRequested",
                "debit",
                "credit",
                "status",
                "userId"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "dateRequested": {
                    "type": "string"
                },
                "dateConfirmed": {
                    "type": "string"
                },
                "debit": {
                    "type": "number"
                },
                "credit": {
                    "type": "number"
                },
                "userId": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "Campus": {
            "required": ["name", "address", "postCode", "city"],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "postCode": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "open": {
                    "type": "boolean"
                },
                "virtual": {
                    "type": "boolean"
                }
            }
        },
        "ClassroomHasCourse": {
            "required": ["courseId", "classroomId"],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "courseId": {
                    "type": "number"
                },
                "classroomId": {
                    "type": "number"
                },
                "activated": {
                    "type": "number"
                }
            }
        },
        "Contract": {
            "required": [
                "startDate",
                "endDate",
                "mission",
                "type",
                "email",
                "phone",
                "address",
                "company",
                "userId",
                "supervisorId"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "mission": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "userId": {
                    "type": "number"
                },
                "supervisorId": {
                    "type": "number"
                }
            }
        },
        "Course": {
            "required": [
                "name",
                "link",
                "year",
                "credits",
                "speciality",
                "description"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "year": {
                    "type": "number"
                },
                "credits": {
                    "type": "number"
                },
                "speciality": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "Feedback": {
            "required": [
                "presentation",
                "pedagogy",
                "technicalCompetence",
                "fluencyInSpeaking",
                "userId",
                "teacherId",
                "courseId"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "presentation": {
                    "type": "string"
                },
                "pedagogy": {
                    "type": "string"
                },
                "technicalCompetence": {
                    "type": "string"
                },
                "fluencyInSpeaking": {
                    "type": "string"
                },
                "userId": {
                    "type": "number"
                },
                "teacherId": {
                    "type": "number"
                },
                "courseId": {
                    "type": "number"
                }
            }
        },
        "Classroom": {
            "required": ["name", "promotion", "campusId"],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "promotion": {
                    "type": "number"
                },
                "campusId": {
                    "type": "number"
                }
            }
        },
        "Grade": {
            "required": [
                "average",
                "userId",
                "classroomHasCourseId",
                "teacherId"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "average": {
                    "type": "number"
                },
                "comment": {
                    "type": "string"
                },
                "userId": {
                    "type": "number"
                },
                "classroomHasCourseId": {
                    "type": "number"
                }
            }
        },
        "Planning": {
            "required": [
                "string",
                "type",
                "period",
                "remote",
                "cancelled",
                "classroomHasCourseId"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "string": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "remote": {
                    "type": "boolean"
                },
                "canceled": {
                    "type": "boolean"
                },
                "classroomHasCourseId": {
                    "type": "number"
                }
            }
        },
        "Project": {
            "required": [
                "startDate",
                "endDate",
                "title",
                "link",
                "classroomHasCourseId"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "details": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "classroomHasCourseId": {
                    "type": "number"
                }
            }
        },
        "Teacher": {
            "required": ["userId", "classroomHasCourseId"],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "active": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "number"
                },
                "classroomHasCourseId": {
                    "type": "number"
                }
            }
        },
        "Tool": {
            "required": ["url", "title", "category"],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "img": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "imgBase64": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "UserHasClassroom": {
            "required": ["classroomId", "userId"],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "active": {
                    "type": "boolean"
                },
                "classroomId": {
                    "type": "number"
                },
                "userId": {
                    "type": "number"
                }
            }
        }
    },

    "responses": {
        "BadRequest": {
            "description": "The request is invalid or incomplete.",
            "schema": {
                "type": "string"
            }
        },
        "Unauthorized": {
            "description": "You are not allowed to perform this request.",
            "schema": {
                "type": "string"
            }
        },
        "NotFound": {
            "description": "The resource could not be found.",
            "schema": {
                "type": "string"
            }
        },
        "Internal": {
            "description": "An internal error occurred.",
            "schema": {
                "type": "string"
            }
        }
    }
}
